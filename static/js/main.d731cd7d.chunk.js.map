{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["countries","registerLocale","require","App","useState","apiData","setApiData","getState","setGetState","state","setState","apiUrl","useEffect","fetch","then","res","json","data","className","type","id","class","onChange","event","target","value","onClick","main","temp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAIAA,IAAUC,eAAeC,EAAQ,KAiElBC,MA/Df,WAEE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,aAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,aAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAIMC,EAAM,4DAAwDF,EAAxD,kBADG,oCAoBf,OAhBAG,qBAAU,WACRC,MAAMF,GACHG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUX,EAAWW,QAC5B,CAACN,IAaF,qBAAKO,UAAU,MAAf,SAEE,sBAAKA,UAAU,YAAf,UAIM,uBACEC,KAAK,OACLC,GAAG,gBACHC,MAAM,eACNC,SArBS,SAACC,GACpBf,EAAYe,EAAMC,OAAOC,QAqBfA,MAAOlB,IAGX,wBAAQW,UAAU,uBAAuBQ,QArB3B,WACpBhB,EAASH,IAoBH,oBAMCF,EAAQsB,KAEL,oBAAGT,UAAU,KAAb,UACGb,EAAQsB,KAAKC,KAAM,OADtB,YAMF,+CClDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d731cd7d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport countries from 'i18n-iso-countries';\n\ncountries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n\nfunction App() {\n  // Stato\n  const [apiData, setApiData] = useState({});\n  const [getState, setGetState] = useState('tamilnadu');\n  const [state, setState] = useState('tamilnadu');\n\n  // API KEY AND URL\n  const apiKey = \"71c406cd0696048af1069afda7277927\";\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${state}&appid=${apiKey}`;\n\n  // Side effect\n  useEffect(() => {\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => setApiData(data));\n  }, [apiUrl]);\n\n  const inputHandler = (event) => {\n    setGetState(event.target.value);\n  };\n\n  const submitHandler = () => {\n    setState(getState);\n  };\n\n \n\n  return (\n    <div className=\"App\">\n   \n      <div className=\"container\">\n       \n          \n          \n            <input\n              type=\"text\"\n              id=\"location-name\"\n              class=\"form-control\"\n              onChange={inputHandler}\n              value={getState}\n            />\n         \n          <button className=\"btn btn-primary mt-2\" onClick={submitHandler}>\n            Search\n          </button>\n       \n\n\n          {apiData.main ? (\n           \n              <p className=\"h2\">\n                {apiData.main.temp- 273.15}&deg; C\n              </p>\n\n    \n          ) : (\n            <h1>Loading</h1>\n          )}      \n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}